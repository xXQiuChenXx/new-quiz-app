# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch (main or master)
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # 1. Install pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9 # Specify pnpm version

      # 2. Setup Node.js and configure pnpm caching
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm' # Use pnpm for caching node_modules

      # 3. Configure GitHub Pages for Next.js
      # This action automatically configures the basePath and assetPrefix in your
      # next.config.js file. It also ensures image optimization is disabled,
      # which is necessary for a static export.
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      # 4. Restore Next.js build cache
      # This step caches the .next/cache directory to speed up subsequent builds.
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # 5. Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install
      
      # 6. Build the Next.js application
      # The `next build` command will automatically use the static export feature
      # because `output: 'export'` is added to next.config.js by the `configure-pages` action.
      - name: Build with Next.js
        run: pnpm next build

      # 7. Upload the build artifact
      # The output from `next build` (the `out` directory) is uploaded as a Pages artifact.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
